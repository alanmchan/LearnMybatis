<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cm.dao.BlogMapper">

    <insert id="addBlog" parameterType="blog">
        insert into blog (id, title, author, create_time, views)
        values (#{id}, #{title}, #{author}, #{createTime}, #{views});
    </insert>

<!--    <select id="queryBlogIf" parameterType="map" resultType="blog">-->
<!--        select * from blog where 1=1-->
<!--        <if test="title != null">-->
<!--            and title = #{title}-->
<!--        </if>-->
<!--        <if test="author != null">-->
<!--            and author = #{author}-->
<!--        </if>-->
<!--    </select>-->

    <sql id="if-title-author">
        <if test="title != null">
            and title = #{title}
        </if>
        <if test="author != null">
            and author = #{author}
        </if>
    </sql>

    <!-- 利用trim改造 -->
    <select id="queryBlogIf" parameterType="map" resultType="blog">
        select * from blog
        <where>
            <!-- 可以之定义where，set标签 -->
<!--            <trim prefix="WHERE" prefixOverrides="AND | OR">-->

<!--            </trim>-->

            <!-- 可以将这部分作为sql片段，方便复用 -->
<!--            <if test="title != null">-->
<!--                and title = #{title}-->
<!--            </if>-->
<!--            <if test="author != null">-->
<!--                and author = #{author}-->
<!--            </if>-->
            <include refid="if-title-author">

            </include>
        </where>

    </select>

    <select id="queryBlogChoose" parameterType="map" resultType="blog">
        select * from blog
        <where>
            <choose>
                <when test="title != null">
                    title = #{title}
                </when>
                <when test="author != null">
                    and author = #{author}
                </when>
                <otherwise>
                    and views = #{views}
                </otherwise>

            </choose>
        </where>
    </select>

    <update id="updateBlog" parameterType="map">
        update blog
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="author != null">author = #{author},</if>
            <if test="views != null">views = #{views}</if>
        </set>
        <!--        where id = #{id} -->
        <!-- 也可以把之前的where标签拿过来用 -->
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>

    </update>

    <!-- 利用foreach动态构造sql
        select * from blog where id = 1 or id = 2 or id = 3

        collection 从paramType的中取数据
        item 从collection中取出的每一项
        open 开始符号
        close 符合
        separator 分隔符

    -->
    <select id="queryBlogForeach" parameterType="map" resultType="blog">
        select * from blog
        <where>
            <foreach collection="ids" item="id" open="" close="" separator="or">
                id = #{id}
            </foreach>
        </where>
    </select>

</mapper>